version: '3.8'

services:
  mysql-member:
    image: mysql
    container_name: mysql-member
    ports:
      - 3306:3306
    volumes:
      - mysql-member:/var/lib/mysql
    environment:
      MYSQL_DATABASE: modu-chat
      MYSQL_USER: user 
      MYSQL_PASSWORD: userpwd
      MYSQL_ROOT_HOST: '%'
      MYSQL_ROOT_PASSWORD: root1234
    networks:
      - modu-chat-network
    healthcheck:
      test: ['CMD-SHELL', 'mysqladmin ping -h 127.0.0.1 -u root --password=$$MYSQL_ROOT_PASSWORD']
      interval: 10s
      timeout: 2s
      retries: 100
    restart: always
  
  mysql-chat:
    image: mysql
    container_name: mysql-chat
    ports:
      - 3307:3306
    volumes:
      - mysql-chat:/var/lib/mysql
    environment:
      MYSQL_DATABASE: modu-chat
      MYSQL_USER: user 
      MYSQL_PASSWORD: userpwd
      MYSQL_ROOT_HOST: '%'
      MYSQL_ROOT_PASSWORD: root1234
    networks:
      - modu-chat-network
    healthcheck:
      test: ['CMD-SHELL', 'mysqladmin ping -h 127.0.0.1 -u root --password=$$MYSQL_ROOT_PASSWORD']
      interval: 10s
      timeout: 2s
      retries: 100
    restart: always
  
  mysql-push:
    image: mysql
    container_name: mysql-push
    ports:
      - 3308:3306
    volumes:
      - mysql-push:/var/lib/mysql
    environment:
      MYSQL_DATABASE: modu-chat
      MYSQL_USER: user 
      MYSQL_PASSWORD: userpwd
      MYSQL_ROOT_HOST: '%'
      MYSQL_ROOT_PASSWORD: root1234
    networks:
      - modu-chat-network
    healthcheck:
      test: ['CMD-SHELL', 'mysqladmin ping -h 127.0.0.1 -u root --password=$$MYSQL_ROOT_PASSWORD']
      interval: 10s
      timeout: 2s
      retries: 100
    restart: always
  
  mysql-profile:
    image: mysql
    container_name: mysql-profile
    ports:
      - 3309:3306
    volumes:
      - mysql-profile:/var/lib/mysql
    environment:
      MYSQL_DATABASE: modu-chat
      MYSQL_USER: user 
      MYSQL_PASSWORD: userpwd
      MYSQL_ROOT_HOST: '%'
      MYSQL_ROOT_PASSWORD: root1234
    networks:
      - modu-chat-network
    healthcheck:
      test: ['CMD-SHELL', 'mysqladmin ping -h 127.0.0.1 -u root --password=$$MYSQL_ROOT_PASSWORD']
      interval: 10s
      timeout: 2s
      retries: 100
    restart: always

  mongo-01:
    container_name: mongo-01
    image: mongo
    volumes:
      - mongo-01:/data/db
      - ./infra/mongodb/rs-init.sh:/scripts/rs-init.sh
      - ./infra/mongodb/mongodb.key:/mongodb.key
    ports:
      - 27017:27017
    links:
      - mongo-02
      - mongo-03
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=rootpass
    command: ["--keyFile", "./mongodb.key",  "--bind_ip_all", "--replSet", "mongo-rs" ]
    networks:
      - modu-chat-network

  mongo-02:
    container_name: mongo-02
    image: mongo
    volumes:
      - mongo-02:/data/db
      - ./infra/mongodb/mongodb.key:/mongodb.key
    ports:
      - 27018:27017
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=rootpass
    command: ["--keyFile", "./mongodb.key", "--bind_ip_all", "--replSet", "mongo-rs" ]
    networks:
      - modu-chat-network

  mongo-03:
    container_name: mongo-03
    image: mongo
    volumes:
      - mongo-03:/data/db
      - ./infra/mongodb/mongodb.key:/mongodb.key
    ports:
      - 27019:27017
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=rootpass
    command: ["--keyFile", "./mongodb.key",  "--bind_ip_all", "--replSet", "mongo-rs" ]
    networks:
      - modu-chat-network

  redis:
    image: redis:alpine
    command: redis-server --port 6379
    container_name: redis
    hostname: redis
    labels:
      - "name=redis"
      - "mode=standalone"
    ports:
      - 6379:6379
    networks:
      - modu-chat-network
  
  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
      - 25672:25672
    networks:
      - modu-chat-network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - modu-chat-network

  kafka:
    image: confluentinc/cp-kafka:latest
    hostname: kafka-broker-1
    container_name: kafka
    ports:
      - "29092:29092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_INTERNAL://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - modu-chat-network

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 9009:8080
    depends_on:
      - zookeeper
      - kafka
    environment:
      KAFKA_CLUSTERS_0_NAME: kafka-ui
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    networks:
      - modu-chat-network

  debezium:
    image: debezium/connect:latest
    container_name: debezium
    ports:
      - 8083:8083
    environment:
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: debezium-config
      OFFSET_STORAGE_TOPIC: debezium-offset
      STATUS_STORAGE_TOPIC: debezium-status
      BOOTSTRAP_SERVERS: kafka:9092
    networks:
      - modu-chat-network

  minio:
    image: minio/minio
    command: server /data --console-address ":9001"
    container_name: minio
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: miniopass
    restart: always
    shm_size: '1gb'
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
      - modu-chat-network
    volumes:
      - /var/modu-chat/minio/data:/data

  zipkin:
    container_name: zipkin
    image: openzipkin/zipkin
    restart: always
    ports:
      - "9411:9411"
    networks:
      - modu-chat-network

  discovery-service:
    container_name: discovery-service
    build: 
      context: ./eureka-server
      dockerfile: Dockerfile
    ports: 
      - 8761:8761
    networks:
      - modu-chat-network

  gateway-service:
    build:
      context: ./gateway-service
      dockerfile: ./Dockerfile
    container_name: gateway-service
    ports:
      - 8000:8000
    environment:
      - eureka.client.serviceUrl.defaultZone=http://discovery-service:8761/eureka/
      - spring.zipkin.base-url=http://zipkin:9411
    depends_on:
      - discovery-service
      - zipkin
    networks:
      - modu-chat-network
    restart: always

  auth-service:
    build:
      context: ./auth-service
      dockerfile: ./Dockerfile
    container_name: auth-service
    ports:
      - 9900:9900
    environment:
      - eureka.client.serviceUrl.defaultZone=http://discovery-service:8761/eureka/
      - spring.zipkin.base-url=http://zipkin:9411
      - spring.redis.host=redis
    depends_on:
      - discovery-service
      - zipkin
      - redis
    networks:
      - modu-chat-network
    restart: always

  chat-service:
    build:
      context: ./chat-service
      dockerfile: ./Dockerfile
    container_name: chat-service
    ports:
      - 9090:9090
    environment:
      - spring.datasource.url=jdbc:mysql://mysql-chat:3306/modu-chat
      - spring.datasource.username=root
      - spring.datasource.password=root1234
      - eureka.client.serviceUrl.defaultZone=http://discovery-service:8761/eureka/
      - spring.zipkin.base-url=http://zipkin:9411
      - spring.redis.host=redis
      - spring.rabbitmq.host=rabbitmq
    depends_on:
      - mysql-chat
      - discovery-service
      - zipkin
      - redis
    networks:
      - modu-chat-network
    restart: always

  member-service:
    build:
      context: ./member-service
      dockerfile: ./Dockerfile
    container_name: member-service
    ports:
      - 8080:8080
    environment:
      - spring.datasource.url=jdbc:mysql://mysql-member:3306/modu-chat
      - spring.datasource.username=root
      - spring.datasource.password=root1234
      - eureka.client.serviceUrl.defaultZone=http://discovery-service:8761/eureka/
      - spring.zipkin.base-url=http://zipkin:9411
      - spring.data.redis.host=redis
    depends_on:
      - mysql-member
      - discovery-service
      - zipkin
      - redis
    networks:
      - modu-chat-network
    restart: always

  profile-service:
    build:
      context: ./profile-service
      dockerfile: ./Dockerfile
    container_name: profile-service
    ports:
      - 8880:8880
    environment:
      - spring.datasource.url=jdbc:mysql://mysql-profile:3306/modu-chat
      - spring.datasource.username=root
      - spring.datasource.password=root1234
      - eureka.client.serviceUrl.defaultZone=http://discovery-service:8761/eureka/
      - spring.zipkin.base-url=http://zipkin:9411
      - spring.redis.host=redis
    depends_on:
      - mysql-profile
      - discovery-service
      - zipkin
    networks:
      - modu-chat-network
    restart: always

  push-service:
    build:
      context: ./push-service
      dockerfile: ./Dockerfile
    container_name: push-service
    ports:
      - 9990:9990
    environment:
      - spring.datasource.url=jdbc:mysql://mysql-push:3306/modu-chat
      - spring.datasource.username=root
      - spring.datasource.password=root1234
      - eureka.client.serviceUrl.defaultZone=http://discovery-service:8761/eureka/
      - spring.zipkin.base-url=http://zipkin:9411
      - spring.redis.host=redis
    depends_on:
      - mysql-push
      - discovery-service
      - zipkin
      - redis
    networks:
      - modu-chat-network
    restart: always

  storage-service:
    build:
      context: ./storage-service
      dockerfile: ./Dockerfile
    container_name: storage-service
    ports:
      - 9999:9999
    environment:
      - spring.datasource.url=jdbc:mysql://mysql:3306/modu-chat
      - spring.datasource.username=root
      - spring.datasource.password=root1234
      - eureka.client.serviceUrl.defaultZone=http://discovery-service:8761/eureka/
      - spring.zipkin.base-url=http://zipkin:9411
      - spring.redis.host=redis
      - minio.endpoint=http://minio:9000
    depends_on:
      - minio
      - discovery-service
      - zipkin
      - redis
    networks:
      - modu-chat-network
    restart: always
    volumes:
      - /var/modu-chat/storage/data:/data

  ws-service:
    build:
      context: ./ws-service
      dockerfile: ./Dockerfile
    container_name: ws-service
    ports:
      - 8090:8090
    environment:
      - spring.datasource.url=jdbc:mysql://mysql:3306/modu-chat
      - spring.datasource.username=root
      - spring.datasource.password=root1234
      - eureka.client.serviceUrl.defaultZone=http://discovery-service:8761/eureka/
      - spring.zipkin.base-url=http://zipkin:9411
      - spring.redis.host=redis
      - spring.rabbitmq.host=rabbitmq
    depends_on:
      - mysql-chat
      - discovery-service
      - zipkin
      - redis
    networks:
      - modu-chat-network
    restart: always

  chat-store-service:
    build:
      context: ./chat-store-service
      dockerfile: ./Dockerfile
    container_name: chat-store-service
    ports:
      - 8100:8100
    environment:
      - spring.data.mongodb.uri=mongodb://admin:rootpass@mongo-01:27017/modu-chat?retryWrites=true&w=majority&authSource=admin
      - spring.kafka.consumer.bootstrap-servers=kafka:9092
      - eureka.client.serviceUrl.defaultZone=http://discovery-service:8761/eureka/
      - spring.zipkin.base-url=http://zipkin:9411
    depends_on:
      - mysql-chat
      - discovery-service
      - zipkin
      - redis
    networks:
      - modu-chat-network
    restart: always

networks:
  modu-chat-network:
    driver: bridge

volumes:
  mysql-data:
  mysql-member:
  mysql-chat:
  mysql-push:
  mysql-profile:
  mongo-01:
  mongo-02:
  mongo-03: